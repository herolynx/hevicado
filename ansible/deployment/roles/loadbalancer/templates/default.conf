upstream fe-cluster {
  {% for host in groups['all'] %}
  	{% for fe in fe_instances %}
    	server {{ fe.name }}:{{ fe_http }};
    {% endfor %}
  {% endfor %}
}

upstream be-cluster {
  {% for host in groups['all'] %}
    {% for be in be_instances %}
      server {{ be.name }}:{{ be_http }};
    {% endfor %}
  {% endfor %}
}

server {
	listen {{ lb_http }} default_server;

 	return 301 https://$host:{{ https_port }}$request_uri;
}

server {
  listen {{ lb_https }};

  ssl on;
	ssl_certificate {{ cert_dir }}/{{ app_name }}.crt;
  ssl_certificate_key {{ cert_dir }}/{{ app_name }}.key;

 	#ssl_session_tickets on;
	ssl_session_cache shared:SSL:20m;
	ssl_session_timeout 4h;

	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
	ssl_prefer_server_ciphers on;

  gzip on;
  gzip_types text/plain text/html text/css application/xml application/json application/x-javascript;
  gzip_min_length 20;

  # Prevent displaying in i-frames
  add_header X-Frame-Options DENY;

	location / {
      proxy_pass http://fe-cluster;
  }

  location /be {
      rewrite /be/(.*) /$1  break;
      proxy_pass http://be-cluster;
  }

  # Handle errors
  error_page 400 401 402 403 404 405 406 407 408  /50x.html;
  error_page 500 502 503 504 505 /50x.html;
  location = /50x.html {
    root {{ nginx_html_dir }};
    internal;
  }

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  #
  location ~ /\.ht {
    deny all;
  }
}
